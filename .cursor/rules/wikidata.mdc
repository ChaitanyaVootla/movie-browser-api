---
description: 
globs: 
alwaysApply: true
---
# wiki data scrape strategy

We will scrape all movie data from wikidata using a single query that will return us all the movies external_ids info

sample query:

```
SELECT DISTINCT ?movie ?movieLabel (SAMPLE(?imdbId) AS ?imdbId) (SAMPLE(?tmdbId) AS ?tmdbId) 
            (SAMPLE(?rottentomatoesId) AS ?rottentomatoesId) (SAMPLE(?metacriticId) AS ?metacriticId) 
            (SAMPLE(?letterboxdId) AS ?letterboxdId) (SAMPLE(?netflixId) AS ?netflixId) 
            (SAMPLE(?primeVideoId) AS ?primeVideoId) (SAMPLE(?appleId) AS ?appleId) 
            (SAMPLE(?hotstarId) AS ?hotstarId) 
        WHERE {
            ?movie wdt:P31 wd:Q11424.  # Instance of "film"

            # Require at least one of IMDb ID or TMDb ID
            ?movie wdt:P345|wdt:P4947 ?id.
            
            OPTIONAL { ?movie wdt:P345 ?imdbId. }             # IMDb ID (optional)
            OPTIONAL { ?movie wdt:P4947 ?tmdbId. }            # TMDb ID (optional)
            OPTIONAL { ?movie wdt:P1258 ?rottentomatoesId. }  # Rotten Tomatoes ID (optional)
            OPTIONAL { ?movie wdt:P1712 ?metacriticId. }      # Metacritic ID (optional)
            OPTIONAL { ?movie wdt:P6127 ?letterboxdId. }      # Letterboxd ID (optional)
            OPTIONAL { ?movie wdt:P1874 ?netflixId. }         # Netflix ID (optional)
            OPTIONAL { ?movie wdt:P8055 ?primeVideoId. }      # Prime Video ID (optional)
            OPTIONAL { ?movie wdt:P9586 ?appleId. }           # Apple ID (optional)
            OPTIONAL { ?movie wdt:P11049 ?hotstarId. }           # Jio Hotstar ID (optional)
            
            SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE]". }
        }
        GROUP BY ?movie ?movieLabel
```
