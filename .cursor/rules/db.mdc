---
description: 
globs: 
alwaysApply: true
---
# Database Schema Documentation

This document provides a comprehensive reference of the database schema for the Movie Browser API. The schema is defined through a series of migrations and is designed to store movie data along with enriched information such as ratings, watch providers, and external IDs.

## Core Tables

### movies

The primary table for storing movie data, primarily sourced from TMDB.

**Columns:**
- `id` (integer): Primary key
- `tmdb_id` (integer): TMDB ID (unique, not null)
- `imdb_id` (varchar(20)): IMDB ID
- `title` (varchar(255)): Movie title (not null)
- `original_title` (varchar(255)): Original title if different from localized title
- `overview` (text): Movie plot summary
- `tagline` (text): Movie tagline
- `release_date` (date): Release date
- `runtime` (integer): Duration in minutes
- `budget` (bigint): Production budget
- `revenue` (bigint): Box office revenue
- `popularity` (decimal(10,4)): TMDB popularity metric
- `vote_average` (decimal(3,1)): Average rating on TMDB
- `vote_count` (integer): Number of votes on TMDB
- `adult` (boolean): Whether the movie is adult-only (default: false)
- `status` (varchar(50)): Release status
- `homepage` (varchar(255)): Official website URL
- `poster_path` (varchar(255)): Poster image path
- `backdrop_path` (varchar(255)): Backdrop image path
- `original_language` (varchar(10)): Original language code
- `credits` (jsonb): Director and top 10 cast members (added in later migration)
- `next_update_time` (timestamp): When to next update this record
- `update_frequency` (string): How often to update this record
- `last_full_update` (timestamp): When all data was last updated
- `created_at` (timestamp): Record creation timestamp (default: now)
- `updated_at` (timestamp): Record update timestamp (default: now)

**Indexes:**
- idx_movies_tmdb_id
- idx_movies_imdb_id
- idx_movies_release_date
- idx_movies_popularity
- idx_movies_next_update (conditional on next_update_time not being null)

### genres

Stores genre information.

**Columns:**
- `id` (integer): Primary key
- `name` (varchar(100)): Genre name (unique, not null)

### movie_genres

Junction table linking movies to genres.

**Columns:**
- `movie_id` (integer): References movies.id (with CASCADE delete)
- `genre_id` (integer): References genres.id (with CASCADE delete)

**Primary Key:** (movie_id, genre_id)

### production_companies

Stores information about production companies.

**Columns:**
- `id` (integer): Primary key
- `name` (varchar(255)): Company name (not null)
- `logo_path` (varchar(255)): Logo image path
- `origin_country` (varchar(2)): Two-letter country code

### movie_production_companies

Junction table linking movies to production companies.

**Columns:**
- `movie_id` (integer): References movies.id (with CASCADE delete)
- `company_id` (integer): References production_companies.id (with CASCADE delete)

**Primary Key:** (movie_id, company_id)

## Enrichment Tables

### external_ids

Stores mappings between internal content and external platforms.

**Columns:**
- `id` (integer): Primary key
- `content_type` (varchar(10)): 'movie' or 'tv'
- `content_id` (integer): References content ID (movies.id or tv_series.id)
- `source` (varchar(50)): Source platform (e.g., 'imdb', 'rottentomatoes')
- `external_id` (varchar(255)): ID on the external platform (updated from 100 to 255 chars)
- `url` (varchar(255)): Full URL to the content on the external platform
- `confidence_score` (decimal(3,2)): Confidence in the mapping's accuracy
- `last_verified` (timestamp): When this mapping was last verified
- `created_at` (timestamp): Record creation timestamp (default: now)
- `updated_at` (timestamp): Record update timestamp (default: now)

**Unique Constraint:** (content_type, content_id, source, external_id)

**Indexes:**
- idx_external_ids_content (content_type, content_id)
- idx_external_ids_source (source)

### ratings

Stores ratings from various sources.

**Columns:**
- `id` (integer): Primary key
- `content_type` (varchar(10)): 'movie' or 'tv'
- `content_id` (integer): References content ID (movies.id or tv_series.id)
- `source` (varchar(50)): Rating source (e.g., 'imdb', 'rottentomatoes')
- `rating_type` (varchar(20)): Type of rating (e.g., 'main', 'critic', 'audience')
- `rating` (decimal(3,1)): Numerical rating
- `rating_count` (integer): Number of ratings
- `consensus` (text): One-line consensus/review
- `details` (jsonb): Source-specific extras (certified, sentiment, etc.)
- `last_updated` (timestamp): When this rating was last updated
- `created_at` (timestamp): Record creation timestamp (default: now)
- `updated_at` (timestamp): Record update timestamp (default: now)

**Unique Constraint:** (content_type, content_id, source, rating_type)

**Indexes:**
- idx_ratings_content (content_type, content_id)
- idx_ratings_source (source)

**Note:** The ratings table was updated in a later migration to support different rating types (main, critic, audience) and to store additional details in a JSONB field.

### watch_providers

Stores information about streaming platforms and other content providers.

**Columns:**
- `id` (integer): Primary key
- `name` (varchar(100)): Provider name (not null)
- `logo_path` (varchar(255)): Logo image path
- `priority` (integer): Display priority/order

### watch_links

Stores detailed information about where to watch content.

**Columns:**
- `id` (integer): Primary key
- `content_type` (varchar(10)): 'movie' or 'tv'
- `content_id` (integer): References content ID (movies.id or tv_series.id)
- `provider_id` (integer): References watch_providers.id (with CASCADE delete)
- `country_code` (varchar(2)): Two-letter country code
- `link_type` (varchar(20)): 'rent', 'buy', 'stream', 'free'
- `url` (varchar(255)): Direct URL to watch the content
- `price` (decimal(10,2)): Price for rent/buy options
- `currency` (varchar(3)): Currency code for the price
- `raw_price` (varchar): Original price string (e.g., "Subscription", "Free")
- `is_subscription` (boolean): Whether this is subscription-based (default: false)
- `is_free` (boolean): Whether this is free content (default: false)
- `last_verified` (timestamp): When this link was last verified
- `created_at` (timestamp): Record creation timestamp (default: now)
- `updated_at` (timestamp): Record update timestamp (default: now)

**Unique Constraint:** (content_type, content_id, provider_id, country_code, link_type)

**Indexes:**
- idx_watch_links_content (content_type, content_id)
- idx_watch_links_country (country_code)
- idx_watch_links_provider (provider_id)

## Schema Evolution

The database schema has evolved through the following migrations:

1. **Initial Schema (20230407)** - Created all core tables and indexes
2. **Add Credits to Movies (20240318)** - Added the credits JSONB field to movies
3. **Add Price Details to Watch Links (20240601)** - Added raw_price, is_subscription, and is_free fields to watch_links
4. **Alter External IDs Length (20250408)** - Increased external_id field length from 100 to 255 characters
5. **Update Ratings Table (20250716)** - Added rating_type and details fields, removed review_count, and updated unique constraints

## Design Notes

1. The schema supports both movies and potentially TV series (content_type field in enrichment tables)
2. Update scheduling is managed through next_update_time and update_frequency fields
3. External IDs table allows for multiple external identifiers with confidence scoring
4. Watch links support different pricing models (buy, rent, subscription, free) with regional variations
5. Ratings support multiple rating types per source (main, critic, audience)

## Mandatory rules
1. Always use `npm run migrate` to create a new migration
2. Always update this doc whenever a db schema update happens, be it create, alter delete etc to keep this schema documentation up to date.
